#include <iostream>
#include <iomanip>
#include <string>

const int empty = 0;
const int occupied = 1;
const int shipTypes = 5;

int battleGrid[10][10];

void board(int grid[10][10]) {
    for (int i = 0; i < 10; i++) {
        for (int j = 0; j < 10; j++) {
            grid[i][j] = occupied;
        }
    }
}

void displayBoard(int location[10][10]) {
    // Letter coordinate
    for (char a = 'A'; a <= 'J'; a++) {
        std::cout << std::setw(5) << a;
    }
    std::cout << std::endl;
    
    // Number coordinate
    for (int i = 1; i <= 10; i++) {
        if (i == 10)
            std::cout << i;
        else
            std::cout << " " << i;
        
        for (int j = 0; j < 10; j++) {
            
            if (location[i][j] == occupied || location[i][j] == empty){
                std::cout << std::setw(5) << "*";
            }
        }
        std::cout << std::endl;
    }
}

int main() {
    std::cout << "Welcome the Sea War Game!\n" << std::endl;
    std::cout << "List the starting and ending coordinates of each ship as RowCol RowCol (e.g. A3 A5): " << std::endl;
    
    board(battleGrid);
    displayBoard(battleGrid);
}

struct point {
    int x;
    int y;
};

struct ship {
    std::string name;
    int length;
    point onGrid[5];
    bool hitFlag[5];
} ship[shipTypes];

enum direction { horizontally, vertically };

struct placeships {
    direction facing;
    struct ship shipType;
} placeShip;

placeships shipPlacement() {
    int d, x, y;
    placeships tmp;
    
    tmp.shipType.onGrid[0].x = -1;
    
    std::cin >> d >> x >> y;
    if (d != 0 && d != 1) return tmp;
    if (x<0 || x >= 10) return tmp;
    if (y<0 || y >= 10) return tmp;
    
    tmp.facing = (direction)d;
    tmp.shipType.onGrid[0].x = x;
    tmp.shipType.onGrid[0].y = y;
    return tmp;
}
